// Generated by CoffeeScript 1.4.0
(function() {
  var arrayutils, revbin;

  revbin = require('./bitreverse');

  arrayutils = {
    max: function(array) {
      var i, max;
      max = -Infinity;
      i = array.length;
      while (i--) {
        if (array[i] > max) {
          max = array[i];
        }
      }
      return max;
    },
    min: function(array) {
      var i, min;
      min = Infinity;
      i = array.length;
      while (i--) {
        if (array[i] < min) {
          min = array[i];
        }
      }
      return min;
    },
    revbin_permute: function(array, n) {
      var ldn, r, temp, x, _i, _ref;
      ldn = Math.log(n) / Math.LN2;
      for (x = _i = 0, _ref = n - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; x = 0 <= _ref ? ++_i : --_i) {
        r = revbin(x, ldn);
        if (r > x) {
          temp = array[x];
          array[x] = array[r];
          array[r] = temp;
        }
      }
      return void 0;
    }
  };

  if (typeof module !== "undefined" && module !== null) {
    module.exports = arrayutils;
  }

}).call(this);
