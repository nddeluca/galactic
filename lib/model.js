// Generated by CoffeeScript 1.4.0
(function() {
  var Image, Model,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Image = require('./image');

  Model = (function(_super) {

    __extends(Model, _super);

    function Model(name, width, height) {
      this.name = name;
      this.width = width;
      this.height = height;
      Model.__super__.constructor.call(this, this.width, this.height);
      this.enabled = true;
      this.stale = true;
      this.params = {};
      this.paramArray = [];
    }

    Model.prototype.enable = function() {
      return this.enabled = true;
    };

    Model.prototype.disable = function() {
      return this.enabled = false;
    };

    Model.prototype.updateParams = function(params) {
      this.params = params;
      return this.stale = true;
    };

    Model.prototype.build = function() {
      return this.stale = false;
    };

    Model.prototype.buildInputHtml = function(param) {
      return '<input data-param="#{param}"></input>';
    };

    Model.prototype.buildControlHtml = function(name) {
      var begin_div, end_div, inputs, param, _i, _len, _ref;
      begin_div = '<div data-name="#{name}">';
      end_div = '</div>';
      inputs = "";
      _ref = this.paramArray;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        param = _ref[_i];
        inputs += this.buildInputHtml(param);
      }
      return begin_div + inputs + end_div;
    };

    return Model;

  })(Image);

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Model;
  }

}).call(this);
